# Generated by Django 2.0.13 on 2019-07-23 12:16

from django.db import migrations
from django.conf import settings

EXAMPLE_CURRENCIES = {
    "EUR": "Euro",
    "USD": "Dollar (US)",
    "GBP": "Pound sterling",
    "CHF": "Brazilian real"
}

PROVIDER_ADAPTERS = (
    (getattr(settings, "FIXER_ADAPTER_CODE", 'FIXER'), 'exchange_rates.backends.fixer.FixerExchangeProviderBackend'),
    (getattr(settings, "MOCK_ADAPTER_CODE", 'MOCK'), 'exchange_rates.backends.mock.MockExchangeProviderBackend'),
)


def load_example_currencies(apps, schema_editor):
    Currency = apps.get_model('exchange_rates', 'Currency')
    example_currencies = getattr(settings, 'EXAMPLE_CURRENCIES', EXAMPLE_CURRENCIES)
    if not example_currencies:
        example_currencies = EXAMPLE_CURRENCIES
    for key, val in example_currencies.items():
        Currency.objects.create(code=key, name=val, symbol=key)


def delete_example_currencies(apps, schema_editor):
    Currency = apps.get_model('exchange_rates', 'Currency')
    example_currencies = getattr(settings, 'EXAMPLE_CURRENCIES', EXAMPLE_CURRENCIES)
    if not example_currencies:
        example_currencies = EXAMPLE_CURRENCIES
    for key, val in example_currencies.items():
        try:
            Currency.objects.get(code=key, name=val, symbol=key).delete()
        except Currency.DoesNotExist:
            pass


def load_providers(apps, schema_editor):
    Provider = apps.get_model('exchange_rates', 'Provider')
    example_providers = getattr(settings, 'PROVIDER_ADAPTERS', PROVIDER_ADAPTERS)
    Provider(name=example_providers[0][0], slug=example_providers[0][0], adapter=example_providers[0][0], order=1, lft=1, rght=10, tree_id=1, level=0).save()
    Provider(name=example_providers[1][0], slug=example_providers[1][0], adapter=example_providers[1][0], order=2, lft=1, rght=42, tree_id=3, level=1).save()


class Migration(migrations.Migration):

    dependencies = [
        ('exchange_rates', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_example_currencies, reverse_code=migrations.RunPython.noop),
        # bug al crear con los Ã¡rboles
        # migrations.RunPython(load_providers, reverse_code=migrations.RunPython.noop),

    ]
