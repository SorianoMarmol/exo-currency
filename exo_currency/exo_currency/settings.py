"""
Django settings for exo_currency project.

Generated by 'django-admin startproject' using Django 2.0.13.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import logging
import os
path = os.path

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2f385**-7+w22ze!ly_ea#m+_b#pn%qf13%)ufsk8(dl7px^ld'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

PROJECT_BASEDIR = path.dirname(path.abspath(__file__))
BASEDIR = path.dirname(PROJECT_BASEDIR)
LOGDIR = BASEDIR + '/../var/log'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': ('%(asctime)s %(levelname)s: %(name)s %(process)d '
                       '%(thread)d %(message)s'),
        },
        'simple': {
            'format': '%(asctime)s %(levelname)s: %(message)s',
        },
        'normal': {
            'format': ('%(asctime)s %(levelname)s: %(name)s: '
                       '%(message)s'),
        },

    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'TRACE',
            'class': 'logging.StreamHandler',
            'formatter': 'normal',
        },
        'file': {
            'level': 'TRACE',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': path.join(LOGDIR, 'django.log'),
        },
        'timesfile': {
            'level': 'TRACE',
            'class': 'logging.FileHandler',
            'formatter': 'verbose',
            'filename': path.join(LOGDIR, 'times.log'),
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        },
        # If you use sentry for logging
        # 'sentry': {
        #     'level': 'ERROR',
        #     'class': 'raven.contrib.django.handlers.SentryHandler',
        # },
    },
    'loggers': {
        '': {       # The root logger
            'handlers': ['console', 'file'],
            'propagate': True,
            'level': 'NOTICE',
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'project.timelog': {
            'handlers': ['console', 'timesfile'],
            'propagate': False,
            'level': 'INFO',
        },
    },
}
logging.addLevelName(5, 'TRACE')
logging.Logger.trace = (
    lambda self, msg, *args, **kwargs:
    self.isEnabledFor(5) and self._log(5, msg, args, **kwargs))
logging.addLevelName(15, 'NOTICE')
logging.Logger.notice = (
    lambda self, msg, *args, **kwargs:
    self.isEnabledFor(15) and self._log(15, msg, args, **kwargs))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # our
    'exchange_rates',
    # external
    'rest_framework',
    "categories",
    "categories.editor",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'exo_currency.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'exo_currency.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'  # 'es-es'

TIME_ZONE = 'Europe/Madrid'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

DEFAULT_BASE_CURRENCY = "EUR"
EXAMPLE_CURRENCIES = {
    DEFAULT_BASE_CURRENCY: "Euro",
    "USD": "Dollar (US)",
    "GBP": "Pound sterling",
    "CHF": "Swiss franc"
}


# fixer.io
FIXER_ACCESS_KEY = 'b3b31808333471c81e10b1f851d1a1b3'  # exo investing PDF
FIXER_ADAPTER_CODE = 'FIXER'
FIXER_ADAPTER_URL = 'http://data.fixer.io/api/latest'
FIXER_FORCE_EXCEPTION = False  # only for force next provider (testing), set to False!

MOCK_ADAPTER_CODE = 'MOCK'

PROVIDER_ADAPTERS = (
    (FIXER_ADAPTER_CODE, 'exchange_rates.backends.fixer.FixerExchangeProviderBackend'),
    (MOCK_ADAPTER_CODE, 'exchange_rates.backends.mock.MockExchangeProviderBackend'),
)

SHOW_PROVIDER = True  # debug
RANDOM_RANGE_INIT = 0.2
RANDOM_RANGE_END = 1.8
